<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小世界</title>
  
  <subtitle>韶华倾负</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-04T10:41:35.822Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>lijiajun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot整合Mybatis详细流程</title>
    <link href="http://example.com/2022/01/04/SpringBoot%E6%95%B4%E5%90%88Mybatis%E8%AF%A6%E7%BB%86%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/2022/01/04/SpringBoot%E6%95%B4%E5%90%88Mybatis%E8%AF%A6%E7%BB%86%E6%B5%81%E7%A8%8B/</id>
    <published>2022-01-04T10:38:05.000Z</published>
    <updated>2022-01-04T10:41:35.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础环境准备"><a href="#基础环境准备" class="headerlink" title="基础环境准备"></a>基础环境准备</h2><h3 id="1、数据库准备"><a href="#1、数据库准备" class="headerlink" title="1、数据库准备"></a>1、数据库准备</h3><p>使用MySQL，创建数据库spring-boot-mybatis，然后在该数据库中创建两个表course和comment，并向表中插入一些基础数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE spring<span class="operator">-</span>boot<span class="operator">-</span>mybatis; </span><br><span class="line"></span><br><span class="line">USE spring<span class="operator">-</span>boot<span class="operator">-</span>mybatis;</span><br><span class="line"></span><br><span class="line"># 创建表course</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> course; </span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> course (</span><br><span class="line">id <span class="type">int</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;课程id&#x27;</span>, </span><br><span class="line">title <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;课程标题&#x27;</span>,</span><br><span class="line">content longtext COMMENT <span class="string">&#x27;课程内容&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">2</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;Spring Boot基础入门&#x27;</span>, <span class="string">&#x27;从入门到精通讲解...&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_article <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;Spring Cloud基础入门&#x27;</span>, <span class="string">&#x27;从入门到精通讲解...&#x27;</span>);</span><br><span class="line"></span><br><span class="line"># 创建表comment</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> comment; </span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> comment (</span><br><span class="line"></span><br><span class="line">id <span class="type">int</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;评论id&#x27;</span>, </span><br><span class="line">content longtext COMMENT <span class="string">&#x27;评论内容&#x27;</span>,</span><br><span class="line">author <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;评论作者&#x27;</span>, </span><br><span class="line">c_id <span class="type">int</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;关联的课程id&#x27;</span>, <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">3</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_comment <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;很全、很详细&#x27;</span>, <span class="string">&#x27;lucy&#x27;</span>, <span class="string">&#x27;1&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_comment <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;赞一个&#x27;</span>, <span class="string">&#x27;tom&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_comment <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;很详细&#x27;</span>, <span class="string">&#x27;eric&#x27;</span>, <span class="string">&#x27;1&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_comment <span class="keyword">VALUES</span> (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;很好，非常详细&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;1&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_comment <span class="keyword">VALUES</span> (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;很不错&#x27;</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;2&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2、创建对应的SpringBoot项目"><a href="#2、创建对应的SpringBoot项目" class="headerlink" title="2、创建对应的SpringBoot项目"></a>2、创建对应的SpringBoot项目</h3><p>此处省略</p><h3 id="3、编写与数据库对应的实体类-set和get方法省略）"><a href="#3、编写与数据库对应的实体类-set和get方法省略）" class="headerlink" title="3、编写与数据库对应的实体类(set和get方法省略）"></a>3、编写与数据库对应的实体类(set和get方法省略）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Comment</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> Integer aId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、编写SpringBoot的配置文件"><a href="#4、编写SpringBoot的配置文件" class="headerlink" title="4、编写SpringBoot的配置文件"></a>4、编写SpringBoot的配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MySQL数据库连接配置 </span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springbootmybatis?serverTimezone=UTC&amp;characterEncoding=UTF-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">rootroot</span></span><br></pre></td></tr></table></figure><h2 id="配置文件整合Mybatis"><a href="#配置文件整合Mybatis" class="headerlink" title="配置文件整合Mybatis"></a>配置文件整合Mybatis</h2><h3 id="创建course数据库对应的操作接口CourseMapper"><a href="#创建course数据库对应的操作接口CourseMapper" class="headerlink" title="创建course数据库对应的操作接口CourseMapper"></a>创建course数据库对应的操作接口CourseMapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CourseMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Article <span class="title">selectCourse</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建Mapper对应的XML映射文件"><a href="#创建Mapper对应的XML映射文件" class="headerlink" title="创建Mapper对应的XML映射文件"></a>创建Mapper对应的XML映射文件</h3><p>resources目录下创建一个统一管理映射文件的包mapper，并在该包下编写与CourseMapper接口方应的映射文件CourseMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line">    <span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">                <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.springboot.mapper.CourseMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectCourse&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Course&quot;</span>&gt;</span></span><br><span class="line">        select * from course</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置XML映射文件路径"><a href="#配置XML映射文件路径" class="headerlink" title="配置XML映射文件路径"></a>配置XML映射文件路径</h3><p>在项目中编写的XML映射文件，SpringBoot并不知道，所以无法扫描到自定义编写的XML配置文 件，还必须在全局配置文件application.yml中添加MyBatis映射文件路径的配置，同时需要添加 实体类别名映射路径，示例代码如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">    <span class="comment">#配置MyBatis的xml配置文件路径 </span></span><br><span class="line">    <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span> </span><br><span class="line">    <span class="comment">#配置XML映射文件中指定的实体类别名路径 </span></span><br><span class="line">    <span class="attr">type-aliases-package:</span> <span class="string">com.mybatis.entity</span></span><br></pre></td></tr></table></figure><h3 id="编写单元测试进行接口方法测试"><a href="#编写单元测试进行接口方法测试" class="headerlink" title="编写单元测试进行接口方法测试"></a>编写单元测试进行接口方法测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CourseMapper courseMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">springBootAndMybatisTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Course course = courseMapper.selectCourse(<span class="number">1</span>);</span><br><span class="line">    System.out.println(course);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此SpringBoot整合Mybatis流程已经完成。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础环境准备&quot;&gt;&lt;a href=&quot;#基础环境准备&quot; class=&quot;headerlink&quot; title=&quot;基础环境准备&quot;&gt;&lt;/a&gt;基础环境准备&lt;/h2&gt;&lt;h3 id=&quot;1、数据库准备&quot;&gt;&lt;a href=&quot;#1、数据库准备&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hutool工具类</title>
    <link href="http://example.com/2021/12/27/hutool%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>http://example.com/2021/12/27/hutool%E5%B7%A5%E5%85%B7%E7%B1%BB/</id>
    <published>2021-12-27T10:06:40.000Z</published>
    <updated>2021-12-27T10:14:48.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Hutool的安装非常简单，Maven项目中只需在<code>pom.xml</code>添加以下依赖即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="常用工具类"><a href="#常用工具类" class="headerlink" title="常用工具类"></a>常用工具类</h2><blockquote><p>使用一个工具方法代替一段复杂代码，避免<code>复制粘贴</code>代码，可以极大的提高我们的开发效率</p></blockquote><h3 id="Convert"><a href="#Convert" class="headerlink" title="Convert"></a>Convert</h3><p>类型转换工具类，用于各种类型数据的转换。平时我们转换类型经常会面临类型转换失败的问题，要写<code>try catch</code>代码，有了它，就不用写了！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转换为字符串</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">String aStr = Convert.toStr(a);</span><br><span class="line"><span class="comment">//转换为指定类型数组</span></span><br><span class="line">String[] b = &#123;<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>&#125;;</span><br><span class="line">Integer[] bArr = Convert.toIntArray(b);</span><br><span class="line"><span class="comment">//转换为日期对象</span></span><br><span class="line">String dateStr = <span class="string">&quot;2017-05-06&quot;</span>;</span><br><span class="line">Date date = Convert.toDate(dateStr);</span><br><span class="line"><span class="comment">//转换为列表</span></span><br><span class="line">String[] strArr = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>&#125;;</span><br><span class="line">List&lt;String&gt; strList = Convert.toList(String.class, strArr);</span><br></pre></td></tr></table></figure><h3 id="DateUtil"><a href="#DateUtil" class="headerlink" title="DateUtil"></a>DateUtil</h3><p>日期时间工具类，定义了一些常用的日期时间操作方法。JDK自带的Date和Calendar对象真心不好用，有了它操作日期时间就简单多了！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Date、long、Calendar之间的相互转换</span></span><br><span class="line"><span class="comment">//当前时间</span></span><br><span class="line">Date date = DateUtil.date();</span><br><span class="line"><span class="comment">//Calendar转Date</span></span><br><span class="line">date = DateUtil.date(Calendar.getInstance());</span><br><span class="line"><span class="comment">//时间戳转Date</span></span><br><span class="line">date = DateUtil.date(System.currentTimeMillis());</span><br><span class="line"><span class="comment">//自动识别格式转换</span></span><br><span class="line">String dateStr = <span class="string">&quot;2017-03-01&quot;</span>;</span><br><span class="line">date = DateUtil.parse(dateStr);</span><br><span class="line"><span class="comment">//自定义格式化转换</span></span><br><span class="line">date = DateUtil.parse(dateStr, <span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line"><span class="comment">//格式化输出日期</span></span><br><span class="line">String format = DateUtil.format(date, <span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line"><span class="comment">//获得年的部分</span></span><br><span class="line"><span class="keyword">int</span> year = DateUtil.year(date);</span><br><span class="line"><span class="comment">//获得月份，从0开始计数</span></span><br><span class="line"><span class="keyword">int</span> month = DateUtil.month(date);</span><br><span class="line"><span class="comment">//获取某天的开始、结束时间</span></span><br><span class="line">Date beginOfDay = DateUtil.beginOfDay(date);</span><br><span class="line">Date endOfDay = DateUtil.endOfDay(date);</span><br><span class="line"><span class="comment">//计算偏移后的日期时间</span></span><br><span class="line">Date newDate = DateUtil.offset(date, DateField.DAY_OF_MONTH, <span class="number">2</span>);</span><br><span class="line"><span class="comment">//计算日期时间之间的偏移量</span></span><br><span class="line"><span class="keyword">long</span> betweenDay = DateUtil.between(date, newDate, DateUnit.DAY);</span><br></pre></td></tr></table></figure><h3 id="JSONUtil"><a href="#JSONUtil" class="headerlink" title="JSONUtil"></a>JSONUtil</h3><p>JSON解析工具类，可用于对象与JSON之间的互相转化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PmsBrand brand = <span class="keyword">new</span> PmsBrand();</span><br><span class="line">brand.setId(<span class="number">1L</span>);</span><br><span class="line">brand.setName(<span class="string">&quot;小米&quot;</span>);</span><br><span class="line">brand.setShowStatus(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//对象转化为JSON字符串</span></span><br><span class="line">String jsonStr = JSONUtil.parse(brand).toString();</span><br><span class="line">LOGGER.info(<span class="string">&quot;jsonUtil parse:&#123;&#125;&quot;</span>, jsonStr);</span><br><span class="line"><span class="comment">//JSON字符串转化为对象</span></span><br><span class="line">PmsBrand brandBean = JSONUtil.toBean(jsonStr, PmsBrand.class);</span><br><span class="line">LOGGER.info(<span class="string">&quot;jsonUtil toBean:&#123;&#125;&quot;</span>, brandBean);</span><br><span class="line">List&lt;PmsBrand&gt; brandList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">brandList.add(brand);</span><br><span class="line">String jsonListStr = JSONUtil.parse(brandList).toString();</span><br><span class="line"><span class="comment">//JSON字符串转化为列表</span></span><br><span class="line">brandList = JSONUtil.toList(<span class="keyword">new</span> JSONArray(jsonListStr), PmsBrand.class);</span><br><span class="line">LOGGER.info(<span class="string">&quot;jsonUtil toList:&#123;&#125;&quot;</span>, brandList);</span><br></pre></td></tr></table></figure><h3 id="StrUtil"><a href="#StrUtil" class="headerlink" title="StrUtil"></a>StrUtil</h3><p>字符串工具类，定义了一些常用的字符串操作方法。<code>StrUtil</code>比<code>StringUtil</code>名称更短，用起来也更方便！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否为空字符串</span></span><br><span class="line">String str = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">StrUtil.isEmpty(str);</span><br><span class="line">StrUtil.isNotEmpty(str);</span><br><span class="line"><span class="comment">//去除字符串的前后缀</span></span><br><span class="line">StrUtil.removeSuffix(<span class="string">&quot;a.jpg&quot;</span>, <span class="string">&quot;.jpg&quot;</span>);</span><br><span class="line">StrUtil.removePrefix(<span class="string">&quot;a.jpg&quot;</span>, <span class="string">&quot;a.&quot;</span>);</span><br><span class="line"><span class="comment">//格式化字符串</span></span><br><span class="line">String template = <span class="string">&quot;这只是个占位符:&#123;&#125;&quot;</span>;</span><br><span class="line">String str2 = StrUtil.format(template, <span class="string">&quot;我是占位符&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;/strUtil format:&#123;&#125;&quot;</span>, str2);</span><br></pre></td></tr></table></figure><h3 id="ClassPathResource"><a href="#ClassPathResource" class="headerlink" title="ClassPathResource"></a>ClassPathResource</h3><p>ClassPath单一资源访问类，可以获取classPath下的文件，在Tomcat等容器下，classPath一般是WEB-INF/classes。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取定义在src/main/resources文件夹中的配置文件</span></span><br><span class="line">ClassPathResource resource = <span class="keyword">new</span> ClassPathResource(<span class="string">&quot;generator.properties&quot;</span>);</span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">properties.load(resource.getStream());</span><br><span class="line">LOGGER.info(<span class="string">&quot;/classPath:&#123;&#125;&quot;</span>, properties);</span><br></pre></td></tr></table></figure><h3 id="ReflectUtil"><a href="#ReflectUtil" class="headerlink" title="ReflectUtil"></a>ReflectUtil</h3><p>Java反射工具类，可用于反射获取类的方法及创建对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取某个类的所有方法</span></span><br><span class="line">Method[] methods = ReflectUtil.getMethods(PmsBrand.class);</span><br><span class="line"><span class="comment">//获取某个类的指定方法</span></span><br><span class="line">Method method = ReflectUtil.getMethod(PmsBrand.class, <span class="string">&quot;getId&quot;</span>);</span><br><span class="line"><span class="comment">//使用反射来创建对象</span></span><br><span class="line">PmsBrand pmsBrand = ReflectUtil.newInstance(PmsBrand.class);</span><br><span class="line"><span class="comment">//反射执行对象的方法</span></span><br><span class="line">ReflectUtil.invoke(pmsBrand, <span class="string">&quot;setId&quot;</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="NumberUtil"><a href="#NumberUtil" class="headerlink" title="NumberUtil"></a>NumberUtil</h3><p>数字处理工具类，可用于各种类型数字的加减乘除操作及类型判断。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> n1 = <span class="number">1.234</span>;</span><br><span class="line"><span class="keyword">double</span> n2 = <span class="number">1.234</span>;</span><br><span class="line"><span class="keyword">double</span> result;</span><br><span class="line"><span class="comment">//对float、double、BigDecimal做加减乘除操作</span></span><br><span class="line">result = NumberUtil.add(n1, n2);</span><br><span class="line">result = NumberUtil.sub(n1, n2);</span><br><span class="line">result = NumberUtil.mul(n1, n2);</span><br><span class="line">result = NumberUtil.div(n1, n2);</span><br><span class="line"><span class="comment">//保留两位小数</span></span><br><span class="line">BigDecimal roundNum = NumberUtil.round(n1, <span class="number">2</span>);</span><br><span class="line">String n3 = <span class="string">&quot;1.234&quot;</span>;</span><br><span class="line"><span class="comment">//判断是否为数字、整数、浮点数</span></span><br><span class="line">NumberUtil.isNumber(n3);</span><br><span class="line">NumberUtil.isInteger(n3);</span><br><span class="line">NumberUtil.isDouble(n3);</span><br></pre></td></tr></table></figure><h3 id="BeanUtil"><a href="#BeanUtil" class="headerlink" title="BeanUtil"></a>BeanUtil</h3><p>JavaBean工具类，可用于Map与JavaBean对象的互相转换以及对象属性的拷贝。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PmsBrand brand = <span class="keyword">new</span> PmsBrand();</span><br><span class="line">brand.setId(<span class="number">1L</span>);</span><br><span class="line">brand.setName(<span class="string">&quot;小米&quot;</span>);</span><br><span class="line">brand.setShowStatus(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//Bean转Map</span></span><br><span class="line">Map&lt;String, Object&gt; map = BeanUtil.beanToMap(brand);</span><br><span class="line">LOGGER.info(<span class="string">&quot;beanUtil bean to map:&#123;&#125;&quot;</span>, map);</span><br><span class="line"><span class="comment">//Map转Bean</span></span><br><span class="line">PmsBrand mapBrand = BeanUtil.mapToBean(map, PmsBrand.class, <span class="keyword">false</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;beanUtil map to bean:&#123;&#125;&quot;</span>, mapBrand);</span><br><span class="line"><span class="comment">//Bean属性拷贝</span></span><br><span class="line">PmsBrand copyBrand = <span class="keyword">new</span> PmsBrand();</span><br><span class="line">BeanUtil.copyProperties(brand, copyBrand);</span><br><span class="line">LOGGER.info(<span class="string">&quot;beanUtil copy properties:&#123;&#125;&quot;</span>, copyBrand);</span><br></pre></td></tr></table></figure><h3 id="CollUtil"><a href="#CollUtil" class="headerlink" title="CollUtil"></a>CollUtil</h3><p>集合操作的工具类，定义了一些常用的集合操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数组转换为列表</span></span><br><span class="line">String[] array = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>&#125;;</span><br><span class="line">List&lt;String&gt; list = CollUtil.newArrayList(array);</span><br><span class="line"><span class="comment">//join：数组转字符串时添加连接符号</span></span><br><span class="line">String joinStr = CollUtil.join(list, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;collUtil join:&#123;&#125;&quot;</span>, joinStr);</span><br><span class="line"><span class="comment">//将以连接符号分隔的字符串再转换为列表</span></span><br><span class="line">List&lt;String&gt; splitList = StrUtil.split(joinStr, <span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;collUtil split:&#123;&#125;&quot;</span>, splitList);</span><br><span class="line"><span class="comment">//创建新的Map、Set、List</span></span><br><span class="line">HashMap&lt;Object, Object&gt; newMap = CollUtil.newHashMap();</span><br><span class="line">HashSet&lt;Object&gt; newHashSet = CollUtil.newHashSet();</span><br><span class="line">ArrayList&lt;Object&gt; newList = CollUtil.newArrayList();</span><br><span class="line"><span class="comment">//判断列表是否为空</span></span><br><span class="line">CollUtil.isEmpty(list);</span><br></pre></td></tr></table></figure><h3 id="MapUtil"><a href="#MapUtil" class="headerlink" title="MapUtil"></a>MapUtil</h3><p>Map操作工具类，可用于创建Map对象及判断Map是否为空。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将多个键值对加入到Map中</span></span><br><span class="line">Map&lt;Object, Object&gt; map = MapUtil.of(<span class="keyword">new</span> String[][]&#123;</span><br><span class="line">    &#123;<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;value1&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;value2&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;value3&quot;</span>&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//判断Map是否为空</span></span><br><span class="line">MapUtil.isEmpty(map);</span><br><span class="line">MapUtil.isNotEmpty(map);</span><br></pre></td></tr></table></figure><h3 id="AnnotationUtil"><a href="#AnnotationUtil" class="headerlink" title="AnnotationUtil"></a>AnnotationUtil</h3><p>注解工具类，可用于获取注解与注解中指定的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取指定类、方法、字段、构造器上的注解列表</span></span><br><span class="line">Annotation[] annotationList = AnnotationUtil.getAnnotations(HutoolController.class, <span class="keyword">false</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;annotationUtil annotations:&#123;&#125;&quot;</span>, annotationList);</span><br><span class="line"><span class="comment">//获取指定类型注解</span></span><br><span class="line">Api api = AnnotationUtil.getAnnotation(HutoolController.class, Api.class);</span><br><span class="line">LOGGER.info(<span class="string">&quot;annotationUtil api value:&#123;&#125;&quot;</span>, api.description());</span><br><span class="line"><span class="comment">//获取指定类型注解的值</span></span><br><span class="line">Object annotationValue = AnnotationUtil.getAnnotationValue(HutoolController.class, RequestMapping.class);</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h3 id="SecureUtil"><a href="#SecureUtil" class="headerlink" title="SecureUtil"></a>SecureUtil</h3><p>加密解密工具类，可用于MD5加密。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MD5加密</span></span><br><span class="line">String str = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">String md5Str = SecureUtil.md5(str);</span><br><span class="line">LOGGER.info(<span class="string">&quot;secureUtil md5:&#123;&#125;&quot;</span>, md5Str);</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h3 id="CaptchaUtil"><a href="#CaptchaUtil" class="headerlink" title="CaptchaUtil"></a>CaptchaUtil</h3><p>验证码工具类，可用于生成图形验证码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成验证码图片</span></span><br><span class="line">LineCaptcha lineCaptcha = CaptchaUtil.createLineCaptcha(<span class="number">200</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    request.getSession().setAttribute(<span class="string">&quot;CAPTCHA_KEY&quot;</span>, lineCaptcha.getCode());</span><br><span class="line">    response.setContentType(<span class="string">&quot;image/png&quot;</span>);<span class="comment">//告诉浏览器输出内容为图片</span></span><br><span class="line">    response.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;No-cache&quot;</span>);<span class="comment">//禁止浏览器缓存</span></span><br><span class="line">    response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">    response.setDateHeader(<span class="string">&quot;Expire&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    lineCaptcha.write(response.getOutputStream());</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h3 id="Validator"><a href="#Validator" class="headerlink" title="Validator"></a>Validator</h3><p>字段验证器，可以对不同格式的字符串进行验证，比如邮箱、手机号、IP等格式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否为邮箱地址</span></span><br><span class="line"><span class="keyword">boolean</span> result = Validator.isEmail(<span class="string">&quot;macro@qq.com&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;Validator isEmail:&#123;&#125;&quot;</span>, result);</span><br><span class="line"><span class="comment">//判断是否为手机号码</span></span><br><span class="line">result = Validator.isMobile(<span class="string">&quot;18911111111&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;Validator isMobile:&#123;&#125;&quot;</span>, result);</span><br><span class="line"><span class="comment">//判断是否为IPV4地址</span></span><br><span class="line">result = Validator.isIpv4(<span class="string">&quot;192.168.3.101&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;Validator isIpv4:&#123;&#125;&quot;</span>, result);</span><br><span class="line"><span class="comment">//判断是否为汉字</span></span><br><span class="line">result = Validator.isChinese(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;Validator isChinese:&#123;&#125;&quot;</span>, result);</span><br><span class="line"><span class="comment">//判断是否为身份证号码（18位中国）</span></span><br><span class="line">result = Validator.isCitizenId(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;Validator isCitizenId:&#123;&#125;&quot;</span>, result);</span><br><span class="line"><span class="comment">//判断是否为URL</span></span><br><span class="line">result = Validator.isUrl(<span class="string">&quot;http://www.baidu.com&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;Validator isUrl:&#123;&#125;&quot;</span>, result);</span><br><span class="line"><span class="comment">//判断是否为生日</span></span><br><span class="line">result = Validator.isBirthday(<span class="string">&quot;2020-02-01&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;Validator isBirthday:&#123;&#125;&quot;</span>, result);</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h3 id="DigestUtil"><a href="#DigestUtil" class="headerlink" title="DigestUtil"></a>DigestUtil</h3><p>摘要算法工具类，支持MD5、SHA-256、Bcrypt等算法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">String password = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="comment">//计算MD5摘要值，并转为16进制字符串</span></span><br><span class="line">String result = DigestUtil.md5Hex(password);</span><br><span class="line">LOGGER.info(<span class="string">&quot;DigestUtil md5Hex:&#123;&#125;&quot;</span>, result);</span><br><span class="line"><span class="comment">//计算SHA-256摘要值，并转为16进制字符串</span></span><br><span class="line">result = DigestUtil.sha256Hex(password);</span><br><span class="line">LOGGER.info(<span class="string">&quot;DigestUtil sha256Hex:&#123;&#125;&quot;</span>, result);</span><br><span class="line"><span class="comment">//生成Bcrypt加密后的密文，并校验</span></span><br><span class="line">String hashPwd = DigestUtil.bcrypt(password);</span><br><span class="line"><span class="keyword">boolean</span> check = DigestUtil.bcryptCheck(password,hashPwd);</span><br><span class="line">LOGGER.info(<span class="string">&quot;DigestUtil bcryptCheck:&#123;&#125;&quot;</span>, check);</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h3 id="HttpUtil"><a href="#HttpUtil" class="headerlink" title="HttpUtil"></a>HttpUtil</h3><p>Http请求工具类，可以发起GET/POST等请求。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String response = HttpUtil.get(<span class="string">&quot;http://localhost:8080/hutool/covert&quot;</span>);</span><br><span class="line">LOGGER.info(<span class="string">&quot;HttpUtil get:&#123;&#125;&quot;</span>, response);</span><br></pre></td></tr></table></figure><h3 id="hutool官网www-hutool-cn"><a href="#hutool官网www-hutool-cn" class="headerlink" title="hutool官网www.hutool.cn/"></a>hutool官网<a href="http://www.hutool.cn/">www.hutool.cn/</a></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;Hutool的安装非常简单，Maven项目中只需在&lt;code&gt;pom.xml&lt;/code&gt;添加以下依赖即可。&lt;/p&gt;
&lt;figure cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/12/17/hello-world/"/>
    <id>http://example.com/2021/12/17/hello-world/</id>
    <published>2021-12-17T06:49:33.859Z</published>
    <updated>2021-12-17T06:49:33.859Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
